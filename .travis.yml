language: go

go:
  - 1.9

go_import_path: github.com/jenarvaezg/magicbox

install: true

addons:
  apt:
    packages:
      - sshpass


# Email me the results of the test runs.
notifications:
  email: true

# Anything in before_script that returns a nonzero exit code will
# flunk the build and immediately stop. It's sorta like having
# set -e enabled in bash.
before_script:
  - MAGICBOX_VERSION=$(cat version.txt)
  - GO_FILES=$(find . -iname '*.go' -type f | grep -v /vendor/) # All the .go files, excluding vendor/
  - go get github.com/golang/lint/golint                        # Linter
  - go get honnef.co/go/tools/cmd/megacheck                     # Badass static analyzer/linter
  - go get github.com/fzipp/gocyclo

# script always run to completion (set +e). All of these code checks are must haves
# in a modern Go project.
script:
  - test -z $(gofmt -s -l $GO_FILES)         # Fail if a .go file hasn't been formatted with gofmt
  - go test -v -race ./...                   # Run all the tests with the race detector enabled
  - go vet ./...                             # go vet is the official Go static analyzer
  - megacheck ./...                          # "go vet on steroids" + linter
  - gocyclo -over 19 $GO_FILES               # forbid code with huge functions
  - golint -set_exit_status $(go list ./...) # one last linter


after_success:
  - echo $TRAVIS_BRANCH;
  - if [ "$TRAVIS_PULL_REQUEST" = "false" ]; then
    ./build_image.sh;
    docker login -u="$DOCKER_USERNAME" -p="$DOCKER_PASSWORD";
    docker push jenarvaezg/magicbox:$MAGICBOX_VERSION;
    fi
  - if [ "$TRAVIS_BRANCH" == "master" ]; then
    echo Deploying;
    sshpass -p "$MAGICBOX_BACKEND_PASSWORD" ssh $MAGICBOX_BACKEND_USER@$MAGICBOX_BACKEND_URL ./restart.sh;
    fi
