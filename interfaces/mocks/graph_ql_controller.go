// Code generated by mockery v1.0.0. DO NOT EDIT.
package mocks

import graphql "github.com/graphql-go/graphql"
import interfaces "github.com/jenarvaezg/MagicHub/interfaces"
import mock "github.com/stretchr/testify/mock"

// GraphQLController is an autogenerated mock type for the GraphQLController type
type GraphQLController struct {
	mock.Mock
}

// GetField provides a mock function with given fields: name
func (_m *GraphQLController) GetField(name string) *graphql.Field {
	ret := _m.Called(name)

	var r0 *graphql.Field
	if rf, ok := ret.Get(0).(func(string) *graphql.Field); ok {
		r0 = rf(name)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*graphql.Field)
		}
	}

	return r0
}

// GetMutations provides a mock function with given fields:
func (_m *GraphQLController) GetMutations() graphql.Fields {
	ret := _m.Called()

	var r0 graphql.Fields
	if rf, ok := ret.Get(0).(func() graphql.Fields); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(graphql.Fields)
		}
	}

	return r0
}

// GetOutputType provides a mock function with given fields: name
func (_m *GraphQLController) GetOutputType(name string) graphql.Output {
	ret := _m.Called(name)

	var r0 graphql.Output
	if rf, ok := ret.Get(0).(func(string) graphql.Output); ok {
		r0 = rf(name)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(graphql.Output)
		}
	}

	return r0
}

// GetQueries provides a mock function with given fields:
func (_m *GraphQLController) GetQueries() graphql.Fields {
	ret := _m.Called()

	var r0 graphql.Fields
	if rf, ok := ret.Get(0).(func() graphql.Fields); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(graphql.Fields)
		}
	}

	return r0
}

// OnAllControllersRegistered provides a mock function with given fields: r
func (_m *GraphQLController) OnAllControllersRegistered(r interfaces.Registry) {
	_m.Called(r)
}
