// Code generated by mockery v1.0.0. DO NOT EDIT.
package mocks

import interfaces "github.com/jenarvaezg/MagicHub/interfaces"
import mock "github.com/stretchr/testify/mock"

// Registry is an autogenerated mock type for the Registry type
type Registry struct {
	mock.Mock
}

// AllControllersRegistered provides a mock function with given fields:
func (_m *Registry) AllControllersRegistered() {
	_m.Called()
}

// AllServicesRegistered provides a mock function with given fields:
func (_m *Registry) AllServicesRegistered() {
	_m.Called()
}

// GetController provides a mock function with given fields: name
func (_m *Registry) GetController(name string) interfaces.Controller {
	ret := _m.Called(name)

	var r0 interfaces.Controller
	if rf, ok := ret.Get(0).(func(string) interfaces.Controller); ok {
		r0 = rf(name)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(interfaces.Controller)
		}
	}

	return r0
}

// GetService provides a mock function with given fields: name
func (_m *Registry) GetService(name string) interfaces.Service {
	ret := _m.Called(name)

	var r0 interfaces.Service
	if rf, ok := ret.Get(0).(func(string) interfaces.Service); ok {
		r0 = rf(name)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(interfaces.Service)
		}
	}

	return r0
}

// RegisterController provides a mock function with given fields: s, name
func (_m *Registry) RegisterController(s interfaces.Controller, name string) {
	_m.Called(s, name)
}

// RegisterService provides a mock function with given fields: s, name
func (_m *Registry) RegisterService(s interfaces.Service, name string) {
	_m.Called(s, name)
}
